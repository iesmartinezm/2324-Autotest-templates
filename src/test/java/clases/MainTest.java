/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.Scanner;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.MethodOrderer.MethodName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

import clases.helpers.Aleatorios;

/**
 * Esta clase esta preparada para testear el programa main principal de un proyecto
 * interceptando y suplantando tando la entrada como la salida estandar teclado
 * y pantalla
 * @author eserrano
 *
 */
@TestMethodOrder(MethodName.class)
class MainTest extends TestBase{
		
	@Test
	@DisplayName("Compilación")
	/**
	 * Compila y se pueden establecer reglas basicas,
	 * Por ejemplo impedir la importación de ciertas clases 
	 */
	void test00RequisitosBasicos() {
		assertTrue(true);
	}
	
	@Test
	@DisplayName("Solicitud de Nombre para el Saludo")
	/**
	 * toString
	 */
	void test01() {
		setIn("\n");
		Main.main(null);
		InputStream salida = new ByteArrayInputStream(outputStreamCaptor.toByteArray());
		Scanner lectorSalida = new Scanner(salida);
		assertEquals("Introduce tu nombre:".strip(),lectorSalida.nextLine().strip());
		lectorSalida.close();
	}
	
	@Test
	@DisplayName("Saludo a la cadena dad")
	/**
	 * toString
	 */
	void test02() {
		
		int palabras = Aleatorios.numeroAleatorio(1, 3);
		
		StringBuilder entrada = new StringBuilder("");
		
		for(int i=0;i<palabras;i++)
			entrada.append(Aleatorios.cadenaAleatoria(3, 9));
		entrada.append("\n");
		
		setIn(entrada.toString());

		Main.main(null);

		InputStream salida = new ByteArrayInputStream(outputStreamCaptor.toByteArray());
		Scanner lectorSalida = new Scanner(salida);
		
		assertTrue("Introduce tu nombre:".strip().equalsIgnoreCase(lectorSalida.nextLine().strip()));
		
		assertTrue(("Hola " + entrada.toString()).strip().equalsIgnoreCase(lectorSalida.nextLine()));
		
		lectorSalida.close();
	}

}